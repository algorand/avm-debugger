{
  "version": 3,
  "sources": [
    "/Users/danielm/repos/algorand/puya/examples/debug/contract.py",
    "/algopy/arc4.py"
  ],
  "mappings": "ACAA;;;AAAA;ADGA;;;AAAA;;AAAA;;;AAAA;;;;;;AAAA;;;AAAA;;;;AAAA;AAAA;AACK;;AAAA;AAAA;AAAA;;AAAA;AADL;;;AAAA;AAAA;;;AAAA;AAAA;;;AAAA;AACK;;;AAAA;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AADL;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;;;;;;;;AAGQ;;AAAQ;AAAJ;AACJ;;AAAA;;AAAI;AAAJ;;AACA;;AAAI;AAAJ;AAAA;;AACG;AAAX;;;AACY;;AAAA;;AAAI;AAAJ;;;;;AACC;;AAAA;;AAAA;AAAb;;;AACY;;AAAA;;AAAI;AAAJ;;;;;AACC;;AAAA;;AAAA;AAAb;;;AACY;;AAAQ;;AAAJ;AAAJ;;;;;AACC;;AAAA;AAAA;;AAAA;;;;AAAb;;;AACY;;AAAA;;AAAI;;;;;;;AAEL;;AAAA;;AAAA;AAAA;;AAAA;AAAX;;;AACiB;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;;;;AAEK;;AAAA;AAAA;;AAAA;;;AAAL;AAAA;;AAEJ;;AAAA;AAAM;;;AAAN;;AACA;;AAAA;AAAA;;AAAI;AAAJ;AAAA;;AACA;AAAM;;;AAAN;;AAEG;;AAAA;;;;AAAX;;;AACY;;AAAA;;AAAA;;;;;;;;AACD;AAAA;;AAAA;;;;AAAX;;;AACY;;AAAA;;AAAA;;;;;;;;AACG;;AAAA;;AAAA;AAAJ;;AAAA;;;;AAAX;;;AACY;;AAAA;;AAAI;;;;;AAER;AAAM;;;AACiB;AAAd;AAAA;;AAAA;AAAc;AAAT;AAAA;;AAAA;AAAd;AAEA;;AAAA;AAGR;;;AAEI;;AAAA;;AAAA;AAAA;;AACA;;AAAA;;AAAA;AAAA;;AACA;;AAAA;;AAAA;;AAAA;;AACK;;AAAL;;AAAA;;AACA;;AAAI;AACJ;;AAAA;;AAAI;AACQ;AAAA;AAAA;AAAL;;AAAA;AAAP;AAGJ;;;AAIO;;AADK;AACL;AAAP;;;AACe;;AAAA;AAAA;AAHF;AAGE;;AAAA;;AAAA;AAAP;AACQ;;AAHJ;AAGI;AAAL;;;AAA0B;;AAHzB;AAGyB;AAAP;AAAA;AAAA;AAJjB;AAIiB;;AAAA;AAAnB;AAAP",
  "op_pc_offset": 2,
  "pc_events": {
    "0": {
      "op": "callsub __puya_arc4_router__",
      "callsub": "examples.debug.contract.DebugContract.__puya_arc4_router__",
      "stack_out": [
        "tmp%0#0"
      ],
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "3": {
      "op": "return",
      "stack_out": []
    },
    "4": {
      "subroutine": "examples.debug.contract.DebugContract.__puya_arc4_router__",
      "block": "__puya_arc4_router__",
      "op": "proto 0 1",
      "params": {},
      "stack_in": []
    },
    "7": {
      "op": "txn NumAppArgs",
      "stack_out": [
        "tmp%0#0"
      ],
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "9": {
      "op": "bz __puya_arc4_router___bare_routing@5",
      "stack_out": []
    },
    "12": {
      "op": "pushbytes 53574bff"
    },
    "18": {
      "op": "txna ApplicationArgs 0",
      "stack_out": [
        "method<\"test(uint64,uint64,uint64)uint64\">",
        "tmp%2#0"
      ],
      "defined_out": [
        "method<\"test(uint64,uint64,uint64)uint64\">",
        "tmp%2#0"
      ]
    },
    "21": {
      "op": "match __puya_arc4_router___test_route@2",
      "stack_out": []
    },
    "25": {
      "op": "intc 1",
      "stack_out": [
        "0"
      ],
      "defined_out": [
        "0"
      ]
    },
    "26": {
      "op": "retsub",
      "retsub": true
    },
    "27": {
      "block": "__puya_arc4_router___test_route@2",
      "op": "txn OnCompletion",
      "stack_in": [],
      "stack_out": [
        "tmp%3#0"
      ],
      "defined_out": [
        "tmp%3#0"
      ]
    },
    "29": {
      "op": "!",
      "stack_out": [
        "tmp%4#0"
      ],
      "defined_out": [
        "tmp%4#0"
      ]
    },
    "30": {
      "op": "assert",
      "stack_out": []
    },
    "31": {
      "op": "txn ApplicationID",
      "stack_out": [
        "tmp%5#0"
      ],
      "defined_out": [
        "tmp%5#0"
      ]
    },
    "33": {
      "op": "assert",
      "stack_out": []
    },
    "34": {
      "op": "txna ApplicationArgs 1",
      "stack_out": [
        "tmp%7#0"
      ],
      "defined_out": [
        "tmp%7#0"
      ]
    },
    "37": {
      "op": "btoi",
      "stack_out": [
        "tmp%8#0"
      ],
      "defined_out": [
        "tmp%8#0"
      ]
    },
    "38": {
      "op": "txna ApplicationArgs 2",
      "stack_out": [
        "tmp%8#0",
        "tmp%9#0"
      ],
      "defined_out": [
        "tmp%9#0"
      ]
    },
    "41": {
      "op": "btoi",
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0"
      ],
      "defined_out": [
        "tmp%10#0"
      ]
    },
    "42": {
      "op": "txna ApplicationArgs 3",
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%11#0"
      ],
      "defined_out": [
        "tmp%11#0"
      ]
    },
    "45": {
      "op": "btoi",
      "stack_out": [
        "tmp%8#0",
        "tmp%10#0",
        "tmp%12#0"
      ],
      "defined_out": [
        "tmp%10#0",
        "tmp%12#0",
        "tmp%8#0"
      ]
    },
    "46": {
      "op": "callsub test",
      "callsub": "examples.debug.contract.DebugContract.test",
      "stack_out": [
        "tmp%13#0"
      ],
      "defined_out": [
        "tmp%13#0"
      ]
    },
    "49": {
      "op": "itob",
      "stack_out": [
        "val_as_bytes%0#0"
      ],
      "defined_out": [
        "val_as_bytes%0#0"
      ]
    },
    "50": {
      "op": "pushbytes 151f7c75",
      "stack_out": [
        "val_as_bytes%0#0",
        "0x151f7c75"
      ],
      "defined_out": [
        "0x151f7c75"
      ]
    },
    "56": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "val_as_bytes%0#0"
      ],
      "defined_out": [
        "val_as_bytes%0#0"
      ]
    },
    "57": {
      "op": "concat",
      "stack_out": [
        "tmp%14#0"
      ],
      "defined_out": [
        "tmp%14#0"
      ]
    },
    "58": {
      "op": "log",
      "stack_out": []
    },
    "59": {
      "op": "intc 0",
      "stack_out": [
        "1"
      ],
      "defined_out": [
        "1"
      ]
    },
    "60": {
      "op": "retsub",
      "retsub": true
    },
    "61": {
      "block": "__puya_arc4_router___bare_routing@5",
      "op": "txn OnCompletion",
      "stack_in": [],
      "stack_out": [
        "tmp%15#0"
      ],
      "defined_out": [
        "tmp%15#0"
      ]
    },
    "63": {
      "op": "bnz __puya_arc4_router___after_if_else@9",
      "stack_out": []
    },
    "66": {
      "op": "txn ApplicationID",
      "stack_out": [
        "tmp%16#0"
      ],
      "defined_out": [
        "tmp%16#0"
      ]
    },
    "68": {
      "op": "!",
      "stack_out": [
        "tmp%17#0"
      ],
      "defined_out": [
        "tmp%17#0"
      ]
    },
    "69": {
      "op": "assert",
      "stack_out": []
    },
    "70": {
      "op": "intc 0",
      "stack_out": [
        "1"
      ],
      "defined_out": [
        "1"
      ]
    },
    "71": {
      "op": "retsub",
      "retsub": true
    },
    "72": {
      "block": "__puya_arc4_router___after_if_else@9",
      "op": "intc 1",
      "stack_in": [],
      "stack_out": [
        "0"
      ],
      "defined_out": [
        "0"
      ]
    },
    "73": {
      "op": "retsub",
      "retsub": true
    },
    "74": {
      "subroutine": "examples.debug.contract.DebugContract.test",
      "block": "test",
      "op": "proto 3 1",
      "params": {
        "x#0": "uint64",
        "y#0": "uint64",
        "z#0": "uint64"
      },
      "stack_in": []
    },
    "77": {
      "op": "intc 1",
      "stack_out": [
        "bee#0"
      ]
    },
    "78": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0"
      ]
    },
    "79": {
      "op": "pushbytes ",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30"
      ]
    },
    "81": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10"
      ]
    },
    "82": {
      "op": "frame_dig -3",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "x#0 (copy)"
      ],
      "defined_out": [
        "x#0 (copy)"
      ]
    },
    "84": {
      "op": "intc 3",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "x#0 (copy)",
        "TMPL_A_MULT"
      ],
      "defined_out": [
        "TMPL_A_MULT"
      ]
    },
    "85": {
      "op": "*",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0"
      ],
      "defined_out": [
        "a#0"
      ]
    },
    "86": {
      "op": "frame_dig -3",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "x#0 (copy)"
      ],
      "defined_out": [
        "x#0 (copy)"
      ]
    },
    "88": {
      "op": "frame_dig -2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "x#0 (copy)",
        "y#0 (copy)"
      ],
      "defined_out": [
        "y#0 (copy)"
      ]
    },
    "90": {
      "op": "+",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "{+}"
      ],
      "defined_out": [
        "{+}"
      ]
    },
    "91": {
      "op": "dupn 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "b#0",
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ]
    },
    "93": {
      "op": "frame_dig -1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ],
      "defined_out": [
        "z#0 (copy)"
      ]
    },
    "95": {
      "op": "*",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "b#0",
        "{*}"
      ],
      "defined_out": [
        "{*}"
      ]
    },
    "96": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "b#0",
        "c#0",
        "c#0 (copy)"
      ],
      "defined_out": [
        "c#0",
        "c#0 (copy)"
      ]
    },
    "97": {
      "op": "cover 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "c#0"
      ],
      "defined_out": [
        "b#0",
        "c#0"
      ]
    },
    "99": {
      "op": "<",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%0#0"
      ],
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "100": {
      "op": "bz test_else_body@2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "103": {
      "op": "frame_dig 4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "105": {
      "op": "frame_dig -2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0 (copy)",
        "y#0 (copy)"
      ],
      "defined_out": [
        "y#0 (copy)"
      ]
    },
    "107": {
      "op": "+",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "{+}"
      ],
      "defined_out": [
        "{+}"
      ]
    },
    "108": {
      "op": "frame_bury 4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "defined_out": [
        "a#0"
      ]
    },
    "110": {
      "op": "b test_after_if_else@11"
    },
    "113": {
      "block": "test_else_body@2",
      "op": "frame_dig 4",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "115": {
      "op": "frame_dig 6",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0 (copy)",
        "c#0 (copy)"
      ],
      "defined_out": [
        "c#0 (copy)"
      ]
    },
    "117": {
      "op": "<",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%1#0"
      ],
      "defined_out": [
        "tmp%1#0"
      ]
    },
    "118": {
      "op": "bz test_else_body@4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "121": {
      "op": "frame_dig 4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "123": {
      "op": "frame_dig -1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0 (copy)",
        "z#0 (copy)"
      ],
      "defined_out": [
        "z#0 (copy)"
      ]
    },
    "125": {
      "op": "+",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "{+}"
      ],
      "defined_out": [
        "{+}"
      ]
    },
    "126": {
      "op": "frame_bury 4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "defined_out": [
        "a#0"
      ]
    },
    "128": {
      "op": "b test_after_if_else@10"
    },
    "131": {
      "block": "test_else_body@4",
      "op": "frame_dig 5",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0 (copy)"
      ]
    },
    "133": {
      "op": "frame_dig 4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0 (copy)",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "135": {
      "op": "<",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%2#0"
      ],
      "defined_out": [
        "tmp%2#0"
      ]
    },
    "136": {
      "op": "bz test_else_body@6",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "139": {
      "op": "frame_dig 4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "141": {
      "op": "pushint 3",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0 (copy)",
        "3"
      ],
      "defined_out": [
        "3"
      ]
    },
    "143": {
      "op": "*",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "{*}"
      ],
      "defined_out": [
        "{*}"
      ]
    },
    "144": {
      "op": "frame_bury 4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "defined_out": [
        "a#0"
      ]
    },
    "146": {
      "op": "b test_after_if_else@10"
    },
    "149": {
      "block": "test_else_body@6",
      "op": "frame_dig 5",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0 (copy)"
      ]
    },
    "151": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ]
    },
    "152": {
      "op": "frame_dig 4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "154": {
      "op": ">",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "tmp%3#0"
      ],
      "defined_out": [
        "tmp%3#0"
      ]
    },
    "155": {
      "op": "swap",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%3#0",
        "b#0"
      ],
      "defined_out": [
        "b#0"
      ]
    },
    "156": {
      "op": "frame_bury 3",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%3#0"
      ],
      "defined_out": [
        "b#10",
        "tmp%3#0"
      ]
    },
    "158": {
      "op": "bz test_after_if_else@8",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "161": {
      "op": "frame_dig 5",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0 (copy)"
      ]
    },
    "163": {
      "op": "frame_dig 4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0 (copy)",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "165": {
      "op": "+",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ],
      "defined_out": [
        "b#0"
      ]
    },
    "166": {
      "op": "frame_bury 3",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "defined_out": [
        "b#10"
      ]
    },
    "168": {
      "block": "test_after_if_else@8",
      "op": "frame_dig 3",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#10 (copy)"
      ],
      "defined_out": [
        "b#10 (copy)"
      ]
    },
    "170": {
      "op": "frame_bury 5",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "defined_out": [
        "b#0"
      ]
    },
    "172": {
      "block": "test_after_if_else@11",
      "op": "frame_dig 4",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "174": {
      "op": "frame_dig 5",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0 (copy)"
      ]
    },
    "176": {
      "op": "+",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%4#0"
      ],
      "defined_out": [
        "tmp%4#0"
      ]
    },
    "177": {
      "op": "frame_dig 6",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%4#0",
        "c#0 (copy)"
      ],
      "defined_out": [
        "c#0 (copy)"
      ]
    },
    "179": {
      "op": "<",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%5#0"
      ],
      "defined_out": [
        "tmp%5#0"
      ]
    },
    "180": {
      "op": "bz test_else_body@13",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "183": {
      "op": "frame_dig 4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "185": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0",
        "a#0 (copy)"
      ]
    },
    "186": {
      "op": "frame_dig -2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)",
        "y#0 (copy)"
      ],
      "defined_out": [
        "y#0 (copy)"
      ]
    },
    "188": {
      "op": "callsub some_func",
      "callsub": "examples.debug.contract.some_func",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%6#0"
      ],
      "defined_out": [
        "a#0",
        "tmp%6#0"
      ]
    },
    "191": {
      "op": "*",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "{*}"
      ],
      "defined_out": [
        "{*}"
      ]
    },
    "192": {
      "op": "frame_bury 4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "defined_out": [
        "a#0"
      ]
    },
    "194": {
      "op": "b test_after_if_else@14"
    },
    "197": {
      "block": "test_else_body@13",
      "op": "frame_dig 5",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0 (copy)"
      ]
    },
    "199": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ]
    },
    "200": {
      "op": "frame_dig -1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)",
        "z#0 (copy)"
      ],
      "defined_out": [
        "z#0 (copy)"
      ]
    },
    "202": {
      "op": "callsub some_func",
      "callsub": "examples.debug.contract.some_func",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "tmp%7#0"
      ],
      "defined_out": [
        "b#0",
        "tmp%7#0"
      ]
    },
    "205": {
      "op": "*",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "{*}"
      ],
      "defined_out": [
        "{*}"
      ]
    },
    "206": {
      "op": "frame_bury 5",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "defined_out": [
        "b#0"
      ]
    },
    "208": {
      "block": "test_after_if_else@14",
      "op": "frame_dig 5",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0 (copy)"
      ]
    },
    "210": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0",
        "b#0 (copy)"
      ]
    },
    "211": {
      "op": "callsub itoa",
      "callsub": "examples.debug.contract.itoa",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "{itoa}"
      ],
      "defined_out": [
        "{itoa}"
      ]
    },
    "214": {
      "op": "frame_bury 0",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0"
      ],
      "defined_out": [
        "bee#0"
      ]
    },
    "216": {
      "op": "frame_dig 4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "b#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "218": {
      "op": "dup"
    },
    "219": {
      "op": "uncover 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)",
        "b#0"
      ],
      "defined_out": [
        "a#0",
        "a#0 (copy)",
        "b#0"
      ]
    },
    "221": {
      "op": "+",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "{+}"
      ],
      "defined_out": [
        "{+}"
      ]
    },
    "222": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "c#0 (copy)"
      ],
      "defined_out": [
        "c#0",
        "c#0 (copy)"
      ]
    },
    "223": {
      "op": "frame_bury 6",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ],
      "defined_out": [
        "c#0"
      ]
    },
    "225": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "c#0 (copy)"
      ],
      "defined_out": [
        "c#0 (copy)"
      ]
    },
    "226": {
      "op": "callsub itoa",
      "callsub": "examples.debug.contract.itoa",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "{itoa}"
      ],
      "defined_out": [
        "{itoa}"
      ]
    },
    "229": {
      "op": "frame_bury 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0"
      ],
      "defined_out": [
        "cea#0"
      ]
    },
    "231": {
      "op": "dig 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "c#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "233": {
      "op": ">",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%8#0"
      ],
      "defined_out": [
        "c#0",
        "tmp%8#0"
      ]
    },
    "234": {
      "op": "swap",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%8#0",
        "a#0"
      ],
      "defined_out": [
        "a#0"
      ]
    },
    "235": {
      "op": "frame_bury 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%8#0"
      ],
      "defined_out": [
        "a#30",
        "tmp%8#0"
      ]
    },
    "237": {
      "op": "bz test_after_if_else@16",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "240": {
      "op": "frame_dig 4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "242": {
      "op": "frame_dig 6",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0 (copy)",
        "c#0 (copy)"
      ],
      "defined_out": [
        "c#0 (copy)"
      ]
    },
    "244": {
      "op": "+",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ],
      "defined_out": [
        "a#0"
      ]
    },
    "245": {
      "op": "frame_bury 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "defined_out": [
        "a#30"
      ]
    },
    "247": {
      "block": "test_after_if_else@16",
      "op": "frame_dig 2",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#30 (copy)"
      ],
      "defined_out": [
        "a#30 (copy)"
      ]
    },
    "249": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0",
        "a#0 (copy)"
      ]
    },
    "250": {
      "op": "frame_bury 4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ],
      "defined_out": [
        "a#0"
      ]
    },
    "252": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "253": {
      "op": "frame_dig 5",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0 (copy)"
      ]
    },
    "255": {
      "op": "<",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%9#0"
      ],
      "defined_out": [
        "tmp%9#0"
      ]
    },
    "256": {
      "op": "swap",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%9#0",
        "a#0"
      ],
      "defined_out": [
        "a#0"
      ]
    },
    "257": {
      "op": "frame_bury 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%9#0"
      ],
      "defined_out": [
        "a#30",
        "tmp%9#0"
      ]
    },
    "259": {
      "op": "bz test_after_if_else@18",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "262": {
      "op": "frame_dig 4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "264": {
      "op": "frame_dig 5",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0 (copy)"
      ]
    },
    "266": {
      "op": "+",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ],
      "defined_out": [
        "a#0"
      ]
    },
    "267": {
      "op": "frame_bury 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "defined_out": [
        "a#30"
      ]
    },
    "269": {
      "block": "test_after_if_else@18",
      "op": "frame_dig 2",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#30 (copy)"
      ],
      "defined_out": [
        "a#30 (copy)"
      ]
    },
    "271": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0",
        "a#0 (copy)"
      ]
    },
    "272": {
      "op": "frame_bury 4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ],
      "defined_out": [
        "a#0"
      ]
    },
    "274": {
      "op": "frame_dig 5",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0 (copy)"
      ]
    },
    "276": {
      "op": "frame_dig 6",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "b#0 (copy)",
        "c#0 (copy)"
      ],
      "defined_out": [
        "c#0 (copy)"
      ]
    },
    "278": {
      "op": "+",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%10#0"
      ],
      "defined_out": [
        "tmp%10#0"
      ]
    },
    "279": {
      "op": "dig 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%10#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "281": {
      "op": ">",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%11#0"
      ],
      "defined_out": [
        "tmp%11#0"
      ]
    },
    "282": {
      "op": "swap",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#0",
        "a#0"
      ],
      "defined_out": [
        "a#0"
      ]
    },
    "283": {
      "op": "frame_bury 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "tmp%11#0"
      ],
      "defined_out": [
        "a#30",
        "tmp%11#0"
      ]
    },
    "285": {
      "op": "bz test_after_if_else@20",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ]
    },
    "288": {
      "op": "frame_dig 4",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "290": {
      "op": "frame_dig -1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0 (copy)",
        "z#0 (copy)"
      ],
      "defined_out": [
        "z#0 (copy)"
      ]
    },
    "292": {
      "op": "*",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ],
      "defined_out": [
        "a#0"
      ]
    },
    "293": {
      "op": "frame_bury 2",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "defined_out": [
        "a#30"
      ]
    },
    "295": {
      "block": "test_after_if_else@20",
      "op": "frame_dig 2",
      "stack_in": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0"
      ],
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ],
      "defined_out": [
        "a#0"
      ]
    },
    "297": {
      "op": "dup",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "298": {
      "op": "callsub itoa",
      "callsub": "examples.debug.contract.itoa",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "aye#0"
      ],
      "defined_out": [
        "aye#0"
      ]
    },
    "301": {
      "op": "bytec 0",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "aye#0",
        "\" \""
      ],
      "defined_out": [
        "\" \""
      ]
    },
    "302": {
      "op": "concat",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%12#0"
      ],
      "defined_out": [
        "tmp%12#0"
      ]
    },
    "303": {
      "op": "frame_dig 0",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%12#0",
        "bee#0 (copy)"
      ],
      "defined_out": [
        "bee#0 (copy)"
      ]
    },
    "305": {
      "op": "concat",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%13#0"
      ],
      "defined_out": [
        "tmp%13#0"
      ]
    },
    "306": {
      "op": "bytec 0",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%13#0",
        "\" \""
      ],
      "defined_out": [
        "\" \""
      ]
    },
    "307": {
      "op": "concat",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%14#0"
      ],
      "defined_out": [
        "tmp%14#0"
      ]
    },
    "308": {
      "op": "frame_dig 1",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%14#0",
        "cea#0 (copy)"
      ],
      "defined_out": [
        "cea#0 (copy)"
      ]
    },
    "310": {
      "op": "concat",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0",
        "tmp%15#0"
      ],
      "defined_out": [
        "tmp%15#0"
      ]
    },
    "311": {
      "op": "log",
      "stack_out": [
        "bee#0",
        "cea#0",
        "a#30",
        "b#10",
        "a#0",
        "b#0",
        "c#0",
        "a#0"
      ],
      "defined_out": [
        "a#0"
      ]
    },
    "312": {
      "op": "frame_bury 0"
    },
    "314": {
      "op": "retsub",
      "retsub": true
    },
    "315": {
      "subroutine": "examples.debug.contract.some_func",
      "block": "some_func",
      "op": "proto 2 1",
      "params": {
        "a#0": "uint64",
        "b#0": "uint64"
      },
      "stack_in": []
    },
    "318": {
      "op": "frame_dig -2",
      "stack_out": [
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "320": {
      "op": "frame_dig -1",
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0 (copy)"
      ]
    },
    "322": {
      "op": "+",
      "stack_out": [
        "{+}"
      ],
      "defined_out": [
        "{+}"
      ]
    },
    "323": {
      "op": "frame_bury -2",
      "stack_out": []
    },
    "325": {
      "op": "frame_dig -1",
      "stack_out": [
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0 (copy)"
      ]
    },
    "327": {
      "op": "frame_dig -2",
      "stack_out": [
        "b#0 (copy)",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "329": {
      "op": "*",
      "stack_out": [
        "{*}"
      ],
      "defined_out": [
        "{*}"
      ]
    },
    "330": {
      "op": "frame_bury -1",
      "stack_out": []
    },
    "332": {
      "op": "frame_dig -2",
      "stack_out": [
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "334": {
      "op": "frame_dig -1",
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0 (copy)"
      ]
    },
    "336": {
      "op": "+",
      "stack_out": [
        "{+}"
      ],
      "defined_out": [
        "{+}"
      ]
    },
    "337": {
      "op": "dup"
    },
    "338": {
      "op": "frame_bury -2",
      "stack_out": [
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "340": {
      "op": "pushint 2",
      "stack_out": [
        "a#0 (copy)",
        "2"
      ],
      "defined_out": [
        "2"
      ]
    },
    "342": {
      "op": "*",
      "stack_out": [
        "{*}"
      ],
      "defined_out": [
        "{*}"
      ]
    },
    "343": {
      "op": "dup"
    },
    "344": {
      "op": "frame_bury -2",
      "stack_out": [
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "346": {
      "op": "frame_dig -1",
      "stack_out": [
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0 (copy)"
      ]
    },
    "348": {
      "op": "+",
      "stack_out": [
        "x#0"
      ],
      "defined_out": [
        "x#0"
      ]
    },
    "349": {
      "op": "frame_dig -2",
      "stack_out": [
        "x#0",
        "a#0 (copy)"
      ],
      "defined_out": [
        "a#0 (copy)"
      ]
    },
    "351": {
      "op": "frame_dig -1",
      "stack_out": [
        "x#0",
        "a#0 (copy)",
        "b#0 (copy)"
      ],
      "defined_out": [
        "b#0 (copy)"
      ]
    },
    "353": {
      "op": "*",
      "stack_out": [
        "x#0",
        "y#0"
      ],
      "defined_out": [
        "y#0"
      ]
    },
    "354": {
      "op": "dup2",
      "stack_out": [
        "x#0",
        "y#0",
        "x#0 (copy)",
        "y#0 (copy)"
      ],
      "defined_out": [
        "x#0 (copy)",
        "y#0 (copy)"
      ]
    },
    "355": {
      "op": "<",
      "stack_out": [
        "x#0",
        "y#0",
        "{<}"
      ],
      "defined_out": [
        "{<}"
      ]
    },
    "356": {
      "op": "swap",
      "stack_out": [
        "x#0",
        "tmp%0#0",
        "y#0"
      ],
      "defined_out": [
        "tmp%0#0",
        "y#0"
      ]
    },
    "357": {
      "op": "cover 2",
      "stack_out": [
        "y#0",
        "x#0",
        "tmp%0#0"
      ],
      "defined_out": [
        "tmp%0#0",
        "x#0"
      ]
    },
    "359": {
      "op": "select",
      "stack_out": [
        "tmp%1#0"
      ],
      "defined_out": [
        "tmp%1#0"
      ]
    },
    "360": {
      "op": "retsub",
      "retsub": true
    },
    "361": {
      "subroutine": "examples.debug.contract.itoa",
      "block": "itoa",
      "op": "proto 1 1",
      "params": {
        "i#0": "uint64"
      },
      "stack_in": []
    },
    "364": {
      "op": "frame_dig -1",
      "stack_out": [
        "i#0 (copy)"
      ],
      "defined_out": [
        "i#0 (copy)"
      ]
    },
    "366": {
      "op": "intc 2",
      "stack_out": [
        "i#0 (copy)",
        "10"
      ],
      "defined_out": [
        "10"
      ]
    },
    "367": {
      "op": "<",
      "stack_out": [
        "tmp%0#0"
      ],
      "defined_out": [
        "tmp%0#0"
      ]
    },
    "368": {
      "op": "bz itoa_after_if_else@2",
      "stack_out": []
    },
    "371": {
      "op": "frame_dig -1",
      "stack_out": [
        "i#0 (copy)"
      ],
      "defined_out": [
        "i#0 (copy)"
      ]
    },
    "373": {
      "op": "intc 0",
      "stack_out": [
        "i#0 (copy)",
        "1"
      ],
      "defined_out": [
        "1"
      ]
    },
    "374": {
      "op": "+",
      "stack_out": [
        "index_plus_1%0#0"
      ],
      "defined_out": [
        "index_plus_1%0#0"
      ]
    },
    "375": {
      "op": "bytec 1",
      "stack_out": [
        "index_plus_1%0#0",
        "0x30313233343536373839"
      ],
      "defined_out": [
        "0x30313233343536373839"
      ]
    },
    "376": {
      "op": "frame_dig -1",
      "stack_out": [
        "index_plus_1%0#0",
        "0x30313233343536373839",
        "i#0 (copy)"
      ],
      "defined_out": [
        "i#0 (copy)"
      ]
    },
    "378": {
      "op": "uncover 2",
      "stack_out": [
        "0x30313233343536373839",
        "i#0 (copy)",
        "index_plus_1%0#0"
      ],
      "defined_out": [
        "index_plus_1%0#0"
      ]
    },
    "380": {
      "op": "substring3",
      "stack_out": [
        "tmp%1#0"
      ],
      "defined_out": [
        "tmp%1#0"
      ]
    },
    "381": {
      "op": "retsub",
      "retsub": true
    },
    "382": {
      "block": "itoa_after_if_else@2",
      "op": "frame_dig -1",
      "stack_in": [],
      "stack_out": [
        "i#0 (copy)"
      ],
      "defined_out": [
        "i#0 (copy)"
      ]
    },
    "384": {
      "op": "intc 2",
      "stack_out": [
        "i#0 (copy)",
        "10"
      ],
      "defined_out": [
        "10"
      ]
    },
    "385": {
      "op": "/",
      "stack_out": [
        "tmp%2#0"
      ],
      "defined_out": [
        "tmp%2#0"
      ]
    },
    "386": {
      "op": "callsub itoa",
      "callsub": "examples.debug.contract.itoa",
      "stack_out": [
        "tmp%3#0"
      ],
      "defined_out": [
        "tmp%3#0"
      ]
    },
    "389": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "i#0 (copy)"
      ],
      "defined_out": [
        "i#0 (copy)"
      ]
    },
    "391": {
      "op": "intc 2",
      "stack_out": [
        "tmp%3#0",
        "i#0 (copy)",
        "10"
      ],
      "defined_out": [
        "10"
      ]
    },
    "392": {
      "op": "%",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "defined_out": [
        "tmp%4#0"
      ]
    },
    "393": {
      "op": "dup",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%4#0 (copy)"
      ],
      "defined_out": [
        "tmp%4#0 (copy)"
      ]
    },
    "394": {
      "op": "intc 0",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "tmp%4#0 (copy)",
        "1"
      ],
      "defined_out": [
        "1"
      ]
    },
    "395": {
      "op": "+",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "index_plus_1%1#0"
      ],
      "defined_out": [
        "index_plus_1%1#0"
      ]
    },
    "396": {
      "op": "bytec 1",
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0",
        "index_plus_1%1#0",
        "0x30313233343536373839"
      ],
      "defined_out": [
        "0x30313233343536373839"
      ]
    },
    "397": {
      "op": "cover 2",
      "stack_out": [
        "tmp%3#0",
        "0x30313233343536373839",
        "tmp%4#0",
        "index_plus_1%1#0"
      ],
      "defined_out": [
        "index_plus_1%1#0",
        "tmp%4#0"
      ]
    },
    "399": {
      "op": "substring3",
      "stack_out": [
        "tmp%3#0",
        "tmp%5#0"
      ],
      "defined_out": [
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "400": {
      "op": "concat",
      "stack_out": [
        "tmp%6#0"
      ],
      "defined_out": [
        "tmp%6#0"
      ]
    },
    "401": {
      "op": "retsub",
      "retsub": true
    }
  }
}